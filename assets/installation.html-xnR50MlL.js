import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as c,c as o,a as n,e as a,w as l,b as s,d as p}from"./app-uYD0Z7Pu.js";const d="/docs/assets/startingInstaller1-S47V8l4h.jpg",u="/docs/assets/startingInstaller2-sgtK-ivE.jpg",v="/docs/assets/startingInstaller3-m-MDRasu.jpg",m="/docs/assets/startingInstaller4-UjmkuDg-.jpg",b={},h=n("h1",{id:"установка",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#установка","aria-hidden":"true"},"#"),s(" Установка")],-1),k=n("p",null,"Вы можете установить DV PAY несколькими способами",-1),g=n("h2",{id:"подготовка-к-установке",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#подготовка-к-установке","aria-hidden":"true"},"#"),s(" Подготовка к установке")],-1),f=n("p",null,"Для успешной установки вам понадобятся 3 домена:",-1),_=n("li",null,[n("strong",null,"Домен Frontend (Внешний интерфейс)."),s(" Домен, на котором будет развернут пользовательский интерфейс личного кабинета;")],-1),D=n("li",null,[n("strong",null,"Домен Backend (Внутренний интрефейс)."),s(" Домен, где будет расположен серверная часть;")],-1),x=n("li",null,[n("strong",null,"Платежный домен."),s(" Домен, в котором будет размещена форма оплаты для ваших клиентов;")],-1),B=n("strong",null,"URL обработки",-1),y={href:"https://t.me/dv_pay_bot",target:"_blank",rel:"noopener noreferrer"},L=p(`<blockquote><p>Например, если ваш основной сайт находится в домене <code>mybestshop.com</code>, вы можете создать следующий дополнительные домены:</p><ul><li><code>app.mybestshop.com</code> (frontend)</li><li><code>api.mybestshop.com</code> (backend)</li><li><code>pay.mybestshop.com</code> (payment)</li></ul></blockquote><p>Подготовьте виртуальную машину с CentOS. Все необходимые пакеты обновлений будут установлены автоматически во время выполнения скрипта.</p><h2 id="установить-с-помощью-shell-скрипта" tabindex="-1"><a class="header-anchor" href="#установить-с-помощью-shell-скрипта" aria-hidden="true">#</a> Установить с помощью shell-скрипта</h2><h3 id="шаг-1-запуск" tabindex="-1"><a class="header-anchor" href="#шаг-1-запуск" aria-hidden="true">#</a> Шаг 1. Запуск</h3><p>Для успешной установки необходимого приложения на ваш сервер вам понадобится сервер с операционной системой CentOS. Пожалуйста, убедитесь, что ваш сервер соответствует этим требованиям.</p><p>Для запуска установки приложения выполните следующую команду в терминале вашего сервера:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-Ls</span> https://raw.githubusercontent.com/dvpay/dv-backend/master/init.sh<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Эта команда загрузит и автоматически запустит скрипт установки по указанной ссылке репозитория. Убедитесь, что ваш сервер имеет доступ в Интернет для успешного завершения процесса.</p><p>Обязательно проверьте действительность ссылки репозитория, чтобы убедиться, что вы используете последнюю версию скрипта установки.</p><p>Если в процессе установки у вас возникнут какие-либо вопросы или неполадки, не стесняйтесь обращаться в службу поддержки. [Служка поддержки DV] (https://t.me/dv_pay_support)</p><h3 id="шаг-2-введите-домены" tabindex="-1"><a class="header-anchor" href="#шаг-2-введите-домены" aria-hidden="true">#</a> Шаг 2. Введите домены</h3><p>Введите ваши домены, которые вы получили во время <a href="#%D0%BF%D0%BE%D0%B4%D0%B3%D0%BE%D1%82%D0%BE%D0%B2%D0%BA%D0%B0-%D0%BA-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B5">Подкготовки</a></p><p><img src="https://i.ibb.co/pLXL2qk/Domains.jpg" alt="Launch"></p><h3 id="шаг-3-введите-url-адрес-обработки" tabindex="-1"><a class="header-anchor" href="#шаг-3-введите-url-адрес-обработки" aria-hidden="true">#</a> Шаг 3. Введите URL-адрес обработки</h3>`,14),I={href:"https://t.me/dv_pay_support",target:"_blank",rel:"noopener noreferrer"},S=n("img",{src:"https://i.ibb.co/LzHQ1Ss/tg-image-4049204792.jpg",alt:"Launch"},null,-1),E=p(`<p>После ввода URL-адреса обработки скрипт продолжит установку. В конце скрипта вам будет предоставлен <strong>DV Учетные данные - скопируйте их в безопасное место.</strong></p><h2 id="веб-установка" tabindex="-1"><a class="header-anchor" href="#веб-установка" aria-hidden="true">#</a> Веб-установка</h2><p>Для установки продукта вам понадобится сервер с операционной системой Linux, рекомендуется использовать дистрибутив Centos, а также установить следующее программное обеспечение:</p><ul><li>Nginx</li><li>php 8.1^ и расширение php cli, fpm, mysqlnd, pdo_mysql, zip, devel, gd, mbstring, curl, xml, pear, bcmath, json, pecl-redis 5, ext, pcntl, сокеты, gmp</li><li>composer</li><li>redis</li><li>База данных mysql percona, созданная с параметрами сортировки utf8mb4_unicode_ci</li><li>узел 18^ и npm</li><li>глобальный установленный пакет vite для установки</li></ul><h3 id="рекомендации" tabindex="-1"><a class="header-anchor" href="#рекомендации" aria-hidden="true">#</a> Рекомендации</h3><p>Например, создайте нового пользователя на вашем сервере:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adduser server <span class="token operator">&amp;&amp;</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> wheel server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="шаг-1-загрузка-и-извлечение-веб-установщика" tabindex="-1"><a class="header-anchor" href="#шаг-1-загрузка-и-извлечение-веб-установщика" aria-hidden="true">#</a> Шаг 1. Загрузка и извлечение веб-установщика</h3><p>Создайте новый каталог и загрузите в него архив с установщиком. Например, в /home/server/merchant:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/server/merchant <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> /home/server/merchant
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/dvpay/web-installer/archive/refs/tags/install.tar.gz <span class="token operator">&amp;&amp;</span> <span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> install.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="шаг-2-предоставьте-права-на-каталог" tabindex="-1"><a class="header-anchor" href="#шаг-2-предоставьте-права-на-каталог" aria-hidden="true">#</a> Шаг 2. Предоставьте права на каталог</h3><p>Предоставьте созданному пользователю права на каталог, где загружен и распакован установщик:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">755</span> /home/server <span class="token operator">&amp;&amp;</span> <span class="token function">chown</span> server:server <span class="token parameter variable">-R</span> /home/server/merchant
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="шаг-3-добавление-конфигурации-nginx" tabindex="-1"><a class="header-anchor" href="#шаг-3-добавление-конфигурации-nginx" aria-hidden="true">#</a> Шаг 3. Добавление конфигурации nginx</h3><p>В каталоге <code>etc/nginx/conf.d</code> создайте файл конфигурации с расширением <code>.conf</code>, дайте ему удобное имя:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> mydomain.com.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Заполните файл конфигурации следующим кодом, заменив свой домен (строка 4) и путь к php.sock (строки 30, 45 и 51):</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>server <span class="token punctuation">{</span>

    listen <span class="token number">80</span><span class="token punctuation">;</span>
    server_name mydomain.com<span class="token punctuation">;</span>

    add_header <span class="token string">&#39;Access-Control-Allow-Headers&#39;</span> <span class="token string">&#39;*&#39;</span> always<span class="token punctuation">;</span>
    add_header <span class="token string">&#39;Access-Control-Allow-Origin&#39;</span> <span class="token string">&#39;*&#39;</span> always<span class="token punctuation">;</span>

    access_log  /var/log/nginx/merchant.access.log<span class="token punctuation">;</span>
    error_log   /var/log/nginx/merchant.error.log<span class="token punctuation">;</span>

    root        /home/server/merchant<span class="token punctuation">;</span>
    index       index.php, index.html<span class="token punctuation">;</span>

    location /install <span class="token punctuation">{</span>
        root /home/server/merchant<span class="token punctuation">;</span>
        try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html?<span class="token variable">$args</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    location / <span class="token punctuation">{</span>
       root /home/server/merchant/frontend<span class="token punctuation">;</span>
       try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html?<span class="token variable">$args</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    location ^~ /api <span class="token punctuation">{</span>
        <span class="token builtin class-name">alias</span> /home/server/merchant/public<span class="token punctuation">;</span>
        try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ @api<span class="token punctuation">;</span>

        location ~ .php <span class="token punctuation">{</span>
            fastcgi_pass unix:/var/run/php82.sock<span class="token punctuation">;</span>
            fastcgi_split_path_info ^<span class="token punctuation">(</span>.+.php<span class="token punctuation">)</span><span class="token punctuation">(</span>.*<span class="token punctuation">)</span>$<span class="token punctuation">;</span>
            include fastcgi.conf<span class="token punctuation">;</span>
            fastcgi_param SCRIPT_FILENAME /home/server/merchant/public/index.php<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    location @api <span class="token punctuation">{</span>
        rewrite /api/<span class="token punctuation">(</span>.*<span class="token punctuation">)</span>$ /api/index.php?/<span class="token variable">$1</span> last<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    location ~ api.php$ <span class="token punctuation">{</span>
        include fastcgi.conf<span class="token punctuation">;</span>
        fastcgi_param PHP_VALUE <span class="token string">&quot;max_execution_time = 900&quot;</span><span class="token punctuation">;</span>
        fastcgi_param PHP_VALUE <span class="token string">&quot;max_input_time = 900&quot;</span><span class="token punctuation">;</span>
        fastcgi_pass unix:/var/run/php82.sock<span class="token punctuation">;</span>
        fastcgi_read_timeout <span class="token number">900</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    location ~ .php$ <span class="token punctuation">{</span>
        include fastcgi.conf<span class="token punctuation">;</span>
        fastcgi_pass unix:/var/run/php82.sock<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    location ~ /.<span class="token punctuation">(</span>ht<span class="token operator">|</span>svn<span class="token operator">|</span><span class="token function">git</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            deny all<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="шаг-4-запуск-программы-установки" tabindex="-1"><a class="header-anchor" href="#шаг-4-запуск-программы-установки" aria-hidden="true">#</a> Шаг 4. Запуск программы установки</h3><p>Теперь вы готовы запустить программу установки - она проверит соответствие установленных пакетов и запросит необходимую информация. Откройте ваш браузер и перейдите по ссылке mydomain.com/install.html</p><p>####1.Введите домен</p><p><img src="`+d+'" alt="InstallStep1"></p><h4 id="_2-подключение-базы-данных" tabindex="-1"><a class="header-anchor" href="#_2-подключение-базы-данных" aria-hidden="true">#</a> 2.Подключение базы данных</h4><p>Введите учетные данные для подключения к вашей базе данных.</p><p><img src="'+u+'" alt="InstallStep1"></p><h4 id="_3-установите-логин-и-пароль-для-администратора" tabindex="-1"><a class="header-anchor" href="#_3-установите-логин-и-пароль-для-администратора" aria-hidden="true">#</a> 3.Установите логин и пароль для администратора</h4><p>Введите адрес электронной почты, который будет использоваться в качестве логина, а также установите пароль для учетной записи. <img src="'+v+'" alt="InstallStep1"></p><h4 id="_4-завершите-установку" tabindex="-1"><a class="header-anchor" href="#_4-завершите-установку" aria-hidden="true">#</a> 4.Завершите установку</h4><p>После проверки доступа к базе данных начнется установка. После завершения установки нажмите кнопку &quot;Перейти на веб-сайт&quot;, чтобы перейти в свой личный кабинет DV Pay. Войдите в систему, используя имя пользователя и пароль, запрошенные на последнем шаге. <img src="'+m+`" alt="InstallStep1"></p><h3 id="шаг-5-настроика-очередеи-и-cron" tabindex="-1"><a class="header-anchor" href="#шаг-5-настроика-очередеи-и-cron" aria-hidden="true">#</a> Шаг 5. Настройка очередей и cron</h3><p>Запустите редактор cron:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Добавьте настройку регулярного запуска:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>* * * * * <span class="token builtin class-name">cd</span> /path-to-your-project <span class="token operator">&amp;&amp;</span> /usr/bin/php artisan schedule:run <span class="token operator">&gt;&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>::: Предупреждения Измените /path-to-your-project на фактический путь к вашему каталогу с приложением и фактический путь к вашему /usr/bin/php :::</p><h4 id="настроика-конфигурации-системы" tabindex="-1"><a class="header-anchor" href="#настроика-конфигурации-системы" aria-hidden="true">#</a> #### Настройка конфигурации системы</h4><p>Перейдите в каталог /etc/systemd/system/ и создайте 2 файла конфигурации:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/systemd/system
<span class="token function">touch</span> transfers.service queue@.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Добавьте код конфигурации в каждый файл: Для файла transfers.service:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Transfer to Processing
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>simple
<span class="token assign-left variable">User</span><span class="token operator">=</span>server

<span class="token assign-left variable">WorkingDirectory</span><span class="token operator">=</span>/home/server
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/php /home/server/backend/artisan withdrawal:loop

<span class="token assign-left variable">Restart</span><span class="token operator">=</span>on-failure
<span class="token assign-left variable">RestartSec</span><span class="token operator">=</span><span class="token number">3</span>
<span class="token assign-left variable">StandardOutput</span><span class="token operator">=</span>syslog
<span class="token assign-left variable">StandardError</span><span class="token operator">=</span>syslog
<span class="token assign-left variable">SyslogIdentifier</span><span class="token operator">=</span>transfers

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Для файла queue@.service:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Queue Worker %I
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">User</span><span class="token operator">=</span>server
<span class="token assign-left variable">Group</span><span class="token operator">=</span>server
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/php /home/server/backend/artisan queue:work <span class="token parameter variable">--queue</span><span class="token operator">=</span>default,notifications,monitor <span class="token parameter variable">--sleep</span><span class="token operator">=</span><span class="token number">3</span> <span class="token parameter variable">--tries</span><span class="token operator">=</span><span class="token number">3</span> --max-time<span class="token operator">=</span><span class="token number">3600</span>
<span class="token assign-left variable">Restart</span><span class="token operator">=</span>on-failure

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Запустите system demon</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> transfers.service
systemctl <span class="token builtin class-name">enable</span> queue@.service

systemctl start transfers.service
systemctl start queue@.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45);function A(q,w){const e=t("RouterLink"),i=t("ExternalLinkIcon");return c(),o("div",null,[h,k,n("ul",null,[n("li",null,[a(e,{to:"/ru/getting-started/INSTALLATION.html#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-shell-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%B0"},{default:l(()=>[s("Установить с помощью shell-скрипта")]),_:1})]),n("li",null,[a(e,{to:"/ru/getting-started/INSTALLATION.html#%D0%B2%D0%B5%D0%B1-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0"},{default:l(()=>[s("Веб-установка")]),_:1})])]),g,f,n("ul",null,[_,D,x,n("li",null,[B,s(" Свяжитесь с службой поддержки "),n("a",y,[s("DV Support"),a(i)]),s(", чтобы получить его.")])]),L,n("p",null,[s("Если вы собираетесь использовать свою собственную обработку платежей введите IP или URL-адрес здесь. Если нет - обратитесь в "),n("a",I,[s("Службу поддержки DV"),a(i)]),s(", чтобы воспользоваться нашей обработкой платежей абсолютно бесплатно! "),S]),E])}const R=r(b,[["render",A],["__file","installation.html.vue"]]);export{R as default};
